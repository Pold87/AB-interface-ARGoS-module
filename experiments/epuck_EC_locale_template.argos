<?xml version="1.0" ?>
<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
   
    <system threads="THREADS" />

    <experiment length="0"
                ticks_per_second="1"
		real_time="REALTIME"
                random_seed="0" />

  </framework>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
<controllers>

    <epuck_environment_classification_controller id="epc"
     library="./build/controllers/libcontrollers.so">
     
      <actuators>
	<epuck_wheels implementation="default" />
        <leds implementation="default" medium="leds" />
        <epuck_range_and_bearing implementation="medium" medium="rab" range="0.50" />
      </actuators>
      <sensors>
        <!--epuck_motor_ground implementation="rot_z_only" /-->
        <epuck_range_and_bearing implementation="medium" medium="rab" show_rays="true"/>
        <epuck_proximity implementation="default" show_rays="false" />
      </sensors>

      <params>
   
     	<simulation_parameters g="10" 
   			       sigma="10"
			       turn="4"
			       lambda="10"
                               exploration_time="45"
			       exitFlag="true"
			       profiling="true"
			       decision_rule="DECISIONRULE"
			       num_pack_saved="2"
			       percent_white="PERCENT_WHITE"
			       base_dir="BASEDIR"
			       use_multiple_nodes="USEMULTIPLENODES"
			       use_background_geth_calls="USEBACKGROUNDGETHCALLS"
			       interface_path="interface.txt"
			       mapping_path="MAPPINGPATH"
			       base_port="BASEPORT"
			       blockchain_path="BLOCKCHAINPATH"
			       use_classical_approach="USECLASSICALAPPROACH"
			       regenerate_file="REGENERATEFILE"
			       max_flooding="MAXFLOODING"
			       percent_black="PERCENT_BLACK"
			       determine_consensus="DETERMINECONSENSUS"
			       contract_address="CONTRACTADDRESS"
			       contract_abi="CONTRACTABI"
			       container_name_base="CONTAINERNAMEBASE"
			       distribute_ether="DISTRIBUTEETHER"/> <!-- Sigma and G must be inserted in seconds, not in ticks; 
							  1 = Voter model; 2 = Direct comparison; 3 = Majority Rule-->
 
      </params>
    </epuck_environment_classification_controller>
  </controllers>
  <loop_functions  library="./build/loop_functions/libenvironment_classification_loop_functions.so"
                  label="environment_classification_loop_functions">

    <cells  number_of_red_cells="0"
	    arena_size="ARENASIZEDIM"
	    cell_dimension="CELLDIMENSION"
	  base_dir_loop="BASEDIR"
	  data_dir="DATADIR"
          number_of_white_cells="0"
	  number_of_black_cells="0"
	  using_percentage="true"
	  percent_white="PERCENT_WHITE"
	  exit="true"            
	  percent_black="PERCENT_BLACK"
	  percent_red="0"
	  save_every_ticks="100000"
	  save_every_ticks_flag="true"
	  save_every_run_flag="true"
	  save_blockchain_flag="true"
	  save_every_robot_flag="false"
	  save_every_quality_flag="false"
	  save_global_stat_flag="false"
	  radix="RADIX"
	  number_of_robots="NUMROBOTS"
	  number_of_runs="NUMRUNS"
	  number_of_qualities="2"
	  r_0="0"
	  w_0="R0"
	  b_0="B0"	  
	  length_of_runs="LENGTHOFRUNS"
	  g="10"
	  sigma="10"
	  lambda="10"
	  turn="4"
	  use_multiple_nodes="USEMULTIPLENODES"
	  decision_rule="DECISIONRULE"
	  use_classical_approach="USECLASSICALAPPROACH"
	  num_byzantine="NUMBYZANTINE"
	  byzantine_swarm_style="BYZANTINESWARMSTYLE"
	  subswarm_consensus="SUBSWARMCONSENSUS"
	  regenerate_file="REGENERATEFILE"
	  color_mixing="MIXING"
	  blockchain_path="BLOCKCHAINPATH"
	  contract_address="CONTRACTADDRESS"
	  contract_abi="CONTRACTABI"
	  container_name_base="CONTAINERNAMEBASE"
	  determine_consensus="DETERMINECONSENSUS"/>

  </loop_functions>
  <!-- *********************** -->
  <!-- * Arena configuration * -->
  <!-- *********************** -->
  
  <!-- Real arena size is 10.3 * 5.15. We put 10.45 * 5.45 because of the walls but the real 
       usable arena for the robots is 10.3*5.-->
    <arena size="ARENASIZEPLUSLARGE, ARENASIZEPLUSLARGE, 1" center="ARENASIZEHALF,ARENASIZEHALF,0">
     <floor id="floor"
           source="loop_functions"
           pixels_per_meter="50" />
    <box id="wall_north" size="ARENASIZEDIM,0.025,0.08" movable="false">
      <body position="ARENASIZEHALF,ARENASIZEPLUSSMALL,0" orientation="0,0,0" />
    </box>
    <box id="wall_south" size="ARENASIZEDIM,0.025,0.08" movable="false">
      <body position="ARENASIZEHALF,0.0075,0" orientation="0,0,0" />
    </box>
    <box id="wall_east" size="0.025,ARENASIZEDIM,0.08" movable="false">
      <body position="ARENASIZEPLUSSMALL,ARENASIZEHALF,0" orientation="0,0,0" />
    </box>
    <box id="wall_west" size="0.025,ARENASIZEDIM,0.08" movable="false">
      <body position="0.0075,ARENASIZEHALF ,0" orientation="0,0,0" />
    </box>

   <distribute>
      <position method="uniform" min="0.1,0.1,0" max="ARENASIZEMINUS,ARENASIZEMINUS,0" />
      <orientation method="gaussian" mean="1,1,0 " std_dev="360,0,0 " />
      <entity quantity="NUMROBOTS" max_trials="20">
        <e-puck id="ep" >
          <controller config="epc" />
        </e-puck>
      </entity>
    </distribute>


  </arena>


  <!-- ******************* -->
  <!-- * Physics engines * -->
  <!-- ******************* -->

  <physics_engines>
    <!--
        Use a 2D dynamics engine.
    -->
    <dynamics2d id="dyn2d" />
  </physics_engines>

  <!-- ********* -->
  <!-- * Media * -->
  <!-- ********* -->

 
  <media>
    <range_and_bearing id="rab" />
    <led id="leds" />
  </media>
  <!-- ****************** -->

  <!-- ****************** -->
  <!-- * Visualization * -->
  <!-- ****************** -->
  <VISUALIZATION>
    <qt-opengl>
       
      <camera>
  	<placement idx="0" position="-0.861442,0.985724,1.41504" look_at="-0.179255,0.992546,0.683892" up="0.731109,0.00731134,0.682221" lens_focal_length="20" />
        <placement idx="1" position="1.94098,0.736798,0.349611" look_at="2.85255,1.04903,0.0821098" lens_focal_length="20" />
        <placement idx="3" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="4" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="5" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="6" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="7" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="8" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="9" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="10" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
        <placement idx="11" position="-2,0,2" look_at="0,0,0" lens_focal_length="20" />
     </camera>
    </qt-opengl>
  </VISUALIZATION>
 
</argos-configuration>
